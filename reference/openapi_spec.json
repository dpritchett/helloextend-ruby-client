{
  "openapi": "3.0.1",
  "info": {
    "title": "Extend API Reference",
    "description": "# Introduction\nWelcome to the Extend API Documentation! Our goal is to make your integration as clear and easy as possible, so if you have feedback or suggestions for our API or reference docs, [please let us know](mailto:devs@helloextend.com).\n\n  If you are implementing the API for the first time, please use the latest \"2019-08-01\" API version. If you have already implemented the API and haven't specified a version, you are on the \"Default\" API version.\n\n #### You can get up and running with Extend with just 5 simple steps:\n\n*   Create an account with Extend, and get an access token from your Extend merchant portal\n\n*   Sync your store's products to Extend\n*   Get the relevant Extend warranty SKUs and add them to your store\n\n*   Add the JS SDK snippets to your store's website, which will enable warranty offers to be displayed in your store\n\n*   Record warranty purchases with Extend so we can create a new contract and deliver it to the customer, or record warranty returns / refunds so we can cancel the contract and account for the refunded amount\n <div class='wrapper tip'><h2>Pro Tip! Keep your store's products up to date</h2><p>To make sure you are selling warranty plans on all eligible products (and not selling them on ineligible ones), it is best to keep your store's products in sync with Extend. If you update your products infrequently, it might be easiest to manually upload or edit products in your merchant portal. If you do update frequently, though, consider integrating with our Products API resource.</p><p>Need help? <a href='mailto:devs@helloextend.com'>Contact us!</a> We love to help!</p></div>",
    "version": "Default"
  },
  "servers": [
    {
      "url": "https://api-demo.helloextend.com"
    }
  ],
  "tags": [
    {
      "name": "Store",
      "description": "A Store object helps organize your products and the associated Extend warranty plans. In order to sync your products to Extend, get warranty plan SKUs, record warranty purchases, or use most of our other REST API endpoints, you need a StoreID. Luckily, you can get your StoreID from your Extend merchant portal!\n\nFor now, only one store is allowed per account, but we'll be adding multi-store support soon.\n\n"
    },
    {
      "name": "Products",
      "description": "A Product object represents an item available for sale in your store. In order for us to assign warranty plans to your products, you first need to sync your store's products to Extend. There are two ways to do this:\n\n*   Upload a CSV of your products through the Extend merchant portal\n\n*   POST your products via the REST API to /stores/{storeId}/products ([see below](/#tag/Store))\n\nPlease be sure to keep your products in sync! We can only match warranty plans to the products you sync to the Extend platform, and can only match plans as accurately as the product data we receive from you."
    },
    {
      "name": "Plans",
      "description": "<p>To offer and sell Extend warranty plans in your store, you will need to create SKUs or products for the warranty plans in your eCommerce store. You can get a list of suggested warranty plan SKUs from Extend once we've finished matching your eligible products to warranty plans. There are two ways to get the suggested warranty SKUs:</p><ul><li>Download them as a CSV from your Extend merchant portal</li><li>GET them via the REST API endpoint /offers/list?storeId={storeId} (<a href='/#tag/Plans'>see below</a>)</li></ul><div class='wrapper important'><h2>Important:</h2><p>Although we will send you the suggested warranty SKUs, the actual warranty SKUs you should create may be different depending on how your eCommerce system works. We generally suggest creating one SKU for each warranty plan IF your eCommerce system allows for dynamic pricing (i.e. a different price can be set for a SKU at the time it is displayed for a specific product). If your system does not allow dynamic pricing, we suggest creating a different SKU for each possible price point we offer for each warranty plan. The possible price points are returned as part of the Plans GET response (<a href='/#tag/Plans/paths/~1stores~1{storeId}~1plans/get'>see below</a>).</p><p>If you'd like more guidance on how to set up your warranty plan SKUs, <a href='mailto:devs@helloextend.com'>please feel free to reach out to us!</a> We are always happy to help!</div><div class='wrapper info'><h2>Why dynamic pricing?</h2><p>The Extend platform optimizes warranty plan pricing by testing different price points to maximize your revenue, factoring specific details about the product like price, model, etc. The Extend Offers SDK will determine the best warranty plan price on the fly each time a customer views an eligible product in your store.</p></div><div class='wrapper tip'><h2>Pro Tip! Hide warranty plans in your store</h2><p>We suggest that you use your eCommerce system's functionality to hide any warranty plan SKUs so that your customers can't find them in your store, except when presented by the Extend Offers SDK and when selected and added you their cart.</p></div>"
    },
    {
      "name": "Contracts",
      "description": "<p>When a customer buys an extended warranty or protection plan for their product, they are purchasing a warranty Contract. Your store needs to record all new warranty plan purchases with Extend so we can create a new contract and deliver it to the customer. You will also need to record any warranty returns / refunds so we can cancel the contract and account for the refunded amount.</p><p>You can record the warranty plan purchase by creating a new warranty contract. For returns, you issue a request for a warranty contract refund. See below for more details!</p>"
    },
    {
      "name": "Offers",
      "description": "The Offers API is a real-time method to know which warranty offers, if any, to display when a customer is viewing a product in your store.  If you are using the Offers SDK, you do not need to use Offers API, as the SDK will retrieve and help display the offers directly.  If, however, you are managing the display of the offers yourself in your store’s front end, you should use the Offers API to make sure you are displaying the correct offers with the correct prices.\n\nThe Offers API will return which plan offers to display for a particular product (usually between one and three plan options), the price of each option, and some details and marketing text about the extended warranty contract that you can use to provide more information to the customer."
    },
    {
      "name": "Extend JS SDK",
      "description": " <p>  <a href=\"https://helloextend.github.io/Extend-SDK-Client-Guide/\" target=\"_blank\">Updated  Extend JS SDK Installation Docs</a> </p> "
    },
    {
      "name": "Extend Shopify Addon",
      "description": " <p>  <a href=\"https://helloextend.github.io/Extend-SDK-Client-Shopify-Addon/\" target=\"_blank\">Updated Extend Shopify Addon Docs</a> </p> "
    },
    {
      "name": "Extend Shopify JS SDK",
      "description": " <h2><p style=\"color:#32329f\">Deprecated (Stores installed before October 1, 2019)</p></h2><p>This guide will walk you through how to use the Extend Shopify Plugin to:</p> <ol> <li>Display product warranty offer on your product page</li> <li>Update the offers when a user changes variants (for stores with more than 1 variant per product page)</li> <li>Open a modal prompt</li> <li>Add a warranty SKU to the customers cart</li> </ol> <h2>Installation</h2> <p> After you install the Extend Shopify App the Extend jQuery Shopify Plugin will be automatically added to your page. No manual installation is necessary. </p> <h2>Prerequisites + Dependencies</h2> <ul> <li>This plugin is dependent on jQuery and it must be available in the global window scope.</li> <li>You will need your Extend Store ID (found through the <a href=\"https://merchants.helloextend.com\">Extend Merchant Portal</a>. see below.)</li> <li>This guide assumes you have a basic understanding of HTML, jQuery, and Shopify products and product variants</li> </ul> <p>You can find your Extend Store ID from within the <a href=\"https://merchants.helloextend.com\">Extend Merchant Portal</a> by clicking on the \"Settings\" navigation tab (<a href=\"https://dev.merchants.helloextend.com/dashboard/settings\">direct link</a>) under <b>Production credentials</b></p> <p><img src=\"https://helloextend-static-assets.s3.amazonaws.com/Credentials.png\"/> <br/></p> <h2>Configure Your store</h2> <p> The SDK load order can vary depending on each integration, so your the common configuration is set to a window variable for the SDK to reference. If you know your product page will only ever have a single variant, you can pass it to the <b>EXTEND_CONFIG</b> object as well with the property <b>variantId</b>. </p> <pre><code class=\"javascript language-javascript\">window.EXTEND_CONFIG = { storeId: 'YOUR_STORE_ID' } </code></pre> <p><br /></p> <h2>Displaying a Product Offer</h2> <p> Place an html element where you would like to see the product page offers with a css selector that you can reference. </p> <pre><code class=\"html language-html\">&lt;div id=\"extend-product-offer\" data-extend-variant-id=\"SHOPIFY_VARIANT_ID\"&gt;&lt;/div&gt; </code></pre> <p> This element will be used as the container for the displayed warranty offer. If you have specific width or spacing requirements, you can add them directly to this element using css or inline styles. We highly recommend adding this element somewhere near your buy-now button and your variant selectors. This provides context to the customer about what the warranty is for and that by selecting an option it will be added to the cart along side the product. </p> <p>Example:</p> <pre><code class=\"html language-html\">&lt;form method=\"post\" action=\"/cart/add\"&gt; &lt;div id=\"extend-product-offer\" data-extend-variant-id=\"SHOPIFY_VARIANT_ID\"&gt;&lt;/div&gt; &lt;button type=\"submit\"&gt;Buy Now&lt;/button&gt; &lt;/form&gt; </code></pre> <p>Example of manual initialization:</p> <pre><code class=\"javascript language-javascript\">ExtendShopify('#extend-product-offer', 'VARIANT_ID') </code></pre> <p><br /></p> <h3>Handling variant selection changes</h3> <p> If your store has multiple variants on a single product page then you'll need to update the widget when the variant changes. This prevents a customer from accidentally purchasing the wrong warranty for a product. </p> <p>Example:</p> <pre><code class=\"javascript language-javascript\">ExtendShopify('#extend-product-offer', 'ANOTHER_VARIANT_ID') </code></pre> <p><br /></p> <h3>Adding a selected warranty to the cart or opening a modal prompt</h3> <p>Below is an example of how you would check for a selected warranty and add it to your cart or optionally open a modal offer prompt. The example uses a button click handler, but depending on your implementation, this might be a form submit handler or something else entirely.</p> <p>Example:</p> <pre><code class=\"javascript language-javascript\">// pre-existing example handler $('#my-submit-button').click(function (e) { const extendOffer = ExtendShopify('#extend-product-offer') if (extendOffer.hasPlanSelection()) { extendOffer.addPlanToCart(() =&gt; { /** handle add to cart */ }) } else { // get the current variantId however you access/store it. const variantId = YourTheme.selectedVariantId() ExtendShopify.openModal(variantId, () =&gt; { /** handle add to cart */ }) } }) </code></pre> <p><br /></p> <h1>API Reference</h1> <h4>ExtendShopify(selector: string | HTMLElement): Component</h4> <p>Initializes and/or retrieves the offer component instance</p> <h4>ExtendShopify(selector: string | HTMLElement, variantId: number | string): Component</h4> <p>Initializes and/or updates an offer component with a specific variantId</p> <h4>ExtendShopify.openModal(variantId: number | string, done: Function)</h4> <p>Opens a modal prompt for the given variantId. The <b>done</b> callback will be called after a warranty has been selected and added to the cart or if the offer was declined.</p> <h4>Component#hasPlanSelection(): boolean</h4> <p>Checks if a customer has selected a plan from the displayed offer</p> <h4>Component#addToCart(done: Function): void</h4> <p>Adds the currently selected warranty plan to the customers cart. The <b>done</b> will be called after the warranty has been added to the cart. If there are no available offers for the variant or no plan selection has been made, the <b>done</b> callback will be called immediately.</p> "
    }
  ],
  "security": [
    {
      "ExtendAccessToken": []
    }
  ],
  "paths": {
    "/offers/list?storeId={storeId}": {
      "get": {
        "summary": "A list of warranty plans available to the store",
        "tags": [
          "Plans"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/storeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of plans that would be available in the store. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansList"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/stores/{storeId}/products": {
      "parameters": [
        {
          "$ref": "#/components/parameters/storeId"
        }
      ],
      "post": {
        "summary": "Create a product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "batch",
            "in": "query",
            "description": "Use the value true if passing a batch of products.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "upsert",
            "in": "query",
            "description": "If true, will update products that already exist.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/stores/{storeId}/products/{productId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/storeId"
        },
        {
          "$ref": "#/components/parameters/productId"
        }
      ],
      "put": {
        "summary": "Update a product",
        "description": "When you update a product, you may not update the referenceId.",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Product"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "referenceId": {
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "get": {
        "summary": "Get a product",
        "description": "Returns information about a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Returns product information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/stores/{storeId}/contracts": {
      "post": {
        "summary": "Create a warranty contract",
        "operationId": "createContracts",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/storeId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successfully created a service contract",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/stores/{storeId}/contracts/{contractId}/refund": {
      "post": {
        "summary": "Cancel a warranty contract and request a refund",
        "description": "This endpoint is your way to report a refunded warranty contract to Extend. If a customer returns an item for which a warranty was purchased, or just the warranty itself, to your store, you should let Extend know so we can cancel the warranty contract. We will also refund you, the merchant, in the next invoice. The amount Extend will refund you (and the amount you should refund to the customer), depends on the date of the refund and the terms of the warranty contract.\n<div class='wrapper tip'><h2>Pro Tip! Check the refund amount before you refund your customer</h2>\n\nTo make sure you refund your customer the same amount as Extend will be refunding you, there is a three-step process:\n\n<ul><li>Send the cancellation API request to Extend with query parameter \"commit\" set to FALSE. This gives you a preview of the cancellation, Including the amount that would be refunded (the \"cancellation quote\")\n</li><li>Issue a refund to the customer for the amount matching the cancellation quote</li><li>Re-send the cancellation API request to Extend with query parameter \"commit\" set to TRUE. This will cause Extend to cancel the contract and issue the merchant refund for the amount matching the cancellation quote</li></ul></div><div class='wrapper important'><h2>Important:</h2>\n\nPlease note that this endpoint <strong>does not cause Extend to refund the customer</strong> - they would get the refund from the store where they purchased the product and warranty contract. A successful call to this endpoint <strong>will void the customer’s warranty contract</strong>, and initiate reimbursement to you, the merchant.</div>",
        "operationId": "refundContract",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/storeId"
          },
          {
            "name": "commit",
            "in": "query",
            "description": "Use the value <strong>\"false\"</strong> to get a preview of the cancellation quote - the amount you will be refunded for the cancelled contract. If you use the value <strong>\"true\"</strong> or omit the query parameter, Extend will execute the contract cancellation.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/contractId"
          }
        ],
        "responses": {
          "202": {
            "description": "Refund request accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/stores/{storeId}/contracts/{contractId}/invoice": {
      "get": {
        "summary": "Get invoice information for a contract",
        "description": "Extend automatically generates an invoice to the merchant whenever a warranty contract is sold.  If it helps with your record-keeping and back end reconciliation, you can get the invoice details using this API call.  If you sent us a purchase order number when making the 'Create a warranty contract' call, we'll include that in the invoice, too, for your reference.",
        "operationId": "contractInvoice",
        "tags": [
          "Contracts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/storeId"
          },
          {
            "$ref": "#/components/parameters/contractId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Invoice Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/offers?storeId={storeId}&productId={productId}": {
      "get": {
        "summary": "Get Offer information",
        "description": "Returns warranty plans and pricing for a specific product. ",
        "operationId": "getOffer",
        "security": [
          "None"
        ],
        "tags": [
          "Offers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/storeId"
          },
          {
            "$ref": "#/components/parameters/productId"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "404": {
            "description": "Could not find an offer for the given product"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ExtendAccessToken": {
        "type": "apiKey",
        "in": "header",
        "description": "<p>The Extend API uses private API keys to authenticate requests, in the header 'X-Extend-Access-Token'. You can view and manage your API key from your Extend merchant portal, under Account Settings.</p><p>Your API key carries many privileges, so be sure to keep it secure! Do not share your secret API keys in any publicly accessible areas like GitHub, client-side code, etc.</p><p>All API requests must be made over HTTPS. Calls made over plain HTTP will fail, as will API requests without proper authentication.</p><br /><p>Example request (using curl) <pre>curl -X GET \\\nhttps://api.helloextend.com/stores/123/products \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' \\\n-H 'X-Extend-Access-Token: 9C_wrrlAAoOvYH9AuespIyCCqYuXJuhuqPvaZgL8OCM'</pre></p>",
        "name": "X-Extend-Access-Token"
      }
    },
    "parameters": {
      "storeId": {
        "name": "storeId",
        "in": "path",
        "required": true,
        "description": "Unique identifier for a Store on Extend",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "c57ed096-24ef-49a4-a20a-d1b8bf770980"
        }
      },
      "productId": {
        "name": "productId",
        "in": "path",
        "required": true,
        "description": "The unique referenceId passed to extend when creating a product.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "contractId": {
        "name": "contractId",
        "in": "path",
        "required": true,
        "description": "Unique identifier for an Extend warranty Contract",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "cc957cb3-3d5d-430b-90a2-9ec96ee4c3cf"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "BadRequest",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "Product": {
        "type": "object",
        "required": [
          "referenceId",
          "price",
          "title"
        ],
        "properties": {
          "brand": {
            "type": "string",
            "description": "Product Brand, Manufacturer or Vendor",
            "example": "ACME"
          },
          "category": {
            "type": "string",
            "description": "Product category. Can be any value and may be used by Extend to map the product to warranty plans.",
            "example": "sports"
          },
          "createdAt": {
            "type": "number",
            "format": "int64",
            "description": "The timestamp when the object was created (internal)",
            "readOnly": true,
            "example": 1557267465
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "maxLength": 2000,
            "example": "One Dozen. Tickle your friends! Suprise your opponent!"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable/disable selling of warranties on this product",
            "example": true
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "description": "A url pointing to the primary image for the product",
            "example": "https://bit.ly/2VN88Jf"
          },
          "mfrWarranty": {
            "type": "object",
            "description": "Information about the manufacturer's warranty. This is optional, but if you can provide it please do as it can significantly speed up the warranty matching process.",
            "properties": {
              "parts": {
                "type": "number",
                "format": "int64",
                "description": "Length of the manufacturers warranty for parts in months.",
                "example": 12
              },
              "labor": {
                "type": "number",
                "format": "int64",
                "description": "Length of the manufacturers warranty for labor in months.",
                "example": 12
              },
              "url": {
                "type": "string",
                "description": "Link to the manufacturers warranty for this product.",
                "example": "http://example.com"
              }
            }
          },
          "price": {
            "type": "number",
            "format": "int64",
            "description": "The base retail price of the product (in cents)",
            "example": 2599
          },
          "title": {
            "type": "string",
            "description": "Product name",
            "maxLength": 255,
            "example": "Explosive Tennis Balls"
          },
          "updatedAt": {
            "type": "number",
            "format": "int64",
            "description": "The timestamp when the object was last updated (internal)",
            "readOnly": true,
            "example": 1557267465
          },
          "status": {
            "readOnly": true,
            "enum": [
              "new",
              "updated",
              "active",
              "inactive"
            ],
            "example": "new"
          },
          "referenceId": {
            "type": "string",
            "description": "This is the unique identifier that identifies the product. This can be a product SKU, or variant id. ",
            "example": "2324f800-7575-4c65-bd2c-588c89e8ab7f"
          },
          "parentReferenceId": {
            "type": "string",
            "description": "This is the id of the parent product, if there is one. This allows nesting of a single parent product with multiple variants (such as multiple color options for the same product)",
            "example": "2324f800-7575-4c65-bd2c-588c89e8ab7f"
          },
          "plans": {
            "type": "array",
            "description": "A list of all extended warranty plans for which the product is eligible, listed by planId.  The Offers SDK or Offers API will provide more detail about which plan options to display for a given product at a given time.",
            "items": {
              "type": "string",
              "example": "1y-electronics-replace"
            }
          },
          "identifiers": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "A unique identifier for the product that is specific to your store",
                "example": "KS944RUR"
              },
              "gtin": {
                "type": "string",
                "description": "<p>Global Trade Item Number (GTIN) - A unique identifier for trade items, developed by GS1. <a href='https://www.gs1.org/standards/id-keys/gtin'>Learn more here</a></p>",
                "example": "012345678901234"
              },
              "upc": {
                "type": "string",
                "description": "The Universal Product Code (UPC) barcode",
                "example": "0123456789012"
              },
              "asin": {
                "type": "string",
                "description": "The Amazon Standard Identification Number (ASIN)",
                "example": "0123456789"
              },
              "barcode": {
                "type": "string",
                "description": "The product's barcode. Non-Standard",
                "example": "123"
              }
            }
          }
        }
      },
      "UnixTimestamp": {
        "type": "number",
        "format": "int64",
        "description": "Epoch time. See [here](https://en.m.wikipedia.org/wiki/Unix_time) for more information",
        "example": 1556574185,
        "readOnly": true
      },
      "ISO8601DateTimeStamp": {
        "type": "string",
        "format": "date-time",
        "example": "2019-07-09T23:56:00.000Z",
        "description": "A Date-Time stamp in ISO 8601 format (UTC)",
        "readOnly": true,
        "nullable": false,
        "required": true
      },
      "Amount": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "amount": {
            "type": "number",
            "example": 1999,
            "description": "Amount, in cents, eg $19.99 would be 1999"
          }
        }
      },
      "CurrencyCode": {
        "type": "string",
        "format": "iso-4217",
        "example": "USD",
        "description": "This is an ISO-4217 currency code. See <a href='https://en.wikipedia.org/wiki/ISO_4217'>https://en.wikipedia.org/wiki/ISO_4217</a> for more information"
      },
      "Address": {
        "required": [
          "address1"
        ],
        "description": "Shipping address where the product associated with the extended warranty is being sent.",
        "properties": {
          "address1": {
            "type": "string",
            "example": "535 Mission Street"
          },
          "address2": {
            "type": "string",
            "example": "11th Floor"
          },
          "city": {
            "type": "string",
            "example": "San Francisco"
          },
          "countryCode": {
            "type": "string",
            "format": "iso-3166",
            "example": "USA",
            "description": "This is an ISO 3166 formatted country code. See <a href='https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes for examples'>https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes for examples</a> for more information"
          },
          "postalCode": {
            "type": "string",
            "example": "94526"
          },
          "provinceCode": {
            "type": "string",
            "format": "iso-3166-2",
            "example": "CA",
            "description": "This is an ISO 3166-2 formatted region. See <a href='https://en.wikipedia.org/wiki/ISO_3166-2'>https://en.wikipedia.org/wiki/ISO_3166-2</a> for more information"
          }
        }
      },
      "Customer": {
        "description": "Details about the customer who purchased the warranty plan.  This information is important so we can create the warranty contract and get it to the customer",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "phone": {
            "type": "string",
            "format": "phone",
            "example": "123-456-7890"
          },
          "email": {
            "description": "While you can create a contract without passing an email address, we <b>strongly</b> recommend that you require and include the customer’s email address for every transaction including an extended warranty purchase.  Extend needs to be able to email the customer their warranty contract information and terms, and to be able to communicate with the customer throughout the life of the protection plan.",
            "type": "string",
            "example": "BobRoss@gmail.com",
            "format": "email"
          },
          "name": {
            "type": "string",
            "example": "Bob Ross"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Invoice": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The invoice id, which is exactly the same as the corresponding contract id.",
            "readOnly": true,
            "example": "cc957cb3-3d5d-430b-90a2-9ec96ee4c3cf"
          },
          "details": {
            "type": "object",
            "properties": {
              "storeId": {
                "type": "string",
                "example": "b1b2b3b5-3d5d-430b-90a2-9ec96ee4c3cf"
              },
              "invoiceDate": {
                "$ref": "#/components/schemas/ISO8601DateTimeStamp"
              }
            }
          },
          "payee": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Extend, Inc",
                "required": true
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "email": {
                "type": "string",
                "example": "billing@helloextend.com"
              },
              "phone": {
                "type": "string",
                "example": "555-555-5555"
              }
            }
          },
          "payer": {
            "type": "object",
            "properties": {
              "name": {
                "required": true,
                "type": "string",
                "example": "ABC Televisions"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "email": {
                "type": "string",
                "example": "sales@abctelevisions.com"
              },
              "phone": {
                "type": "string",
                "example": "555-555-5555"
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Extend Protection Plan - AV Receiver"
                },
                "transactionDate": {
                  "$ref": "#/components/schemas/ISO8601DateTimeStamp"
                },
                "retailPrice": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Amount"
                    },
                    {
                      "description": "The retail price of the contract"
                    }
                  ]
                },
                "unitPrice": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Amount"
                    },
                    {
                      "description": "The contract cost after reveue share"
                    }
                  ]
                },
                "lineTotal": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Amount"
                    },
                    {
                      "description": "The total of the line (quantity * unitPrice)"
                    }
                  ]
                },
                "quantity": {
                  "type": "number",
                  "example": 1,
                  "description": "Number of contracts sold (always 1)"
                },
                "discount": {
                  "type": "object",
                  "properties": {
                    "percent": {
                      "type": "number",
                      "example": 25
                    },
                    "label": {
                      "type": "string",
                      "default": "Merchant revenue share"
                    },
                    "amount": {
                      "$ref": "#/components/schemas/Amount"
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "orderReferenceId": {
                      "type": "string",
                      "required": false,
                      "example": "PO-12345",
                      "description": "An optional purchase Order number referenced in the original contract"
                    },
                    "planId": {
                      "type": "string",
                      "example": "10001-auto-part-base-replace-1y",
                      "description": "The plan that the contract applied to"
                    },
                    "product": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Xbox One X 1TB console"
                        },
                        "referenceId": {
                          "type": "string",
                          "example": "SKU-123-456",
                          "description": "The store-specific unique reference identifier for the product that the warranty plan is connected to. In other words, if the customer is buying a TV and a warranty plan for the TV, this would be the ID for the TV. Example ID types: a product SKU, variant ID, GTIN, or any other unique identifier you use in your store. Please see the documentation for <a href='/#tag/Store'>'Create a product'</a> for more information"
                        },
                        "price": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Amount"
                            },
                            {
                              "description": "The price paid for the product, in the base unit (i.e. cents) with no currency code. If this amount was lower than the retail price, Extend will assume the price was discounted"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "totalAmountDue": {
            "$ref": "#/components/schemas/Amount"
          }
        }
      },
      "Contract": {
        "required": [
          "transactionId",
          "transactionDate",
          "currency",
          "plan",
          "product",
          "customer"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique Extend ID for the warranty contract. Use this for reference when recording returns / refunds.",
            "readOnly": true,
            "example": "cc957cb3-3d5d-430b-90a2-9ec96ee4c3cf"
          },
          "createdAt": {
            "type": "number",
            "format": "int64",
            "description": "The timestamp when the object was created (internal).",
            "readOnly": true,
            "example": 1557267465
          },
          "updatedAt": {
            "type": "number",
            "format": "int64",
            "description": "The timestamp when the object was updated (internal).",
            "readOnly": true,
            "example": 1557267556
          },
          "transactionId": {
            "type": "string",
            "example": "99999999",
            "description": "Your store's unique transaction identifier, which may be used to query for transactions in the future"
          },
          "poNumber": {
            "type": "string",
            "example": "ABC-123",
            "description": "An optional merchant generated purchase order number used for reconciliation"
          },
          "transactionTotal": {
            "type": "integer",
            "format": "int64",
            "example": 14999,
            "description": "The total sale transaction amount, in the base unit (i.e. cents) with no currency code. This will help us more easily find transactions and associated warranty contracts during the claims process."
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "product": {
            "type": "object",
            "description": "Details about the product the warranty contract was purchased for.",
            "required": [
              "referenceId",
              "purchasePrice"
            ],
            "properties": {
              "referenceId": {
                "type": "string",
                "example": "SKU-123-456",
                "description": "The store-specific unique reference identifier for the product that the warranty plan is connected to. In other words, if the customer is buying a TV and a warranty plan for the TV, this would be the ID for the TV. Example ID types: a product SKU, variant ID, GTIN, or any other unique identifier you use in your store. Please see the documentation for <a href='/#tag/Store'>'Create a product'</a> for more information."
              },
              "purchasePrice": {
                "type": "integer",
                "format": "int64",
                "example": 14999,
                "description": "The price paid for the product, in the base unit (i.e. cents) with no currency code. If this amount was lower than the retail price, Extend will assume the price was discounted."
              },
              "manufacturerWarrantyLength": {
                "type": "integer",
                "format": "int64",
                "example": 12,
                "description": "The duration of the product's manufacturer warranty as a numer of months.",
                "readOnly": true
              },
              "manufacturerWarrantyLengthParts": {
                "type": "integer",
                "format": "int64",
                "example": 123456,
                "description": "The manufacturer warranty length parts.",
                "readOnly": true
              },
              "manufacturerWarrantyLengthLabor": {
                "type": "integer",
                "format": "int64",
                "example": 123456,
                "description": "The manufacturer warranty length labor.",
                "readOnly": true
              },
              "serialNumber": {
                "type": "string",
                "description": "The serial number of the product.",
                "example": "ABCD123456"
              }
            }
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "transactionDate": {
            "type": "number",
            "example": 1563388069,
            "description": "The sale transaction date. The warranty contract term is based on this date. This is the epoch time as an integer."
          },
          "plan": {
            "type": "object",
            "description": "Information about the plan being purchased.",
            "required": [
              "purchasePrice",
              "planId"
            ],
            "properties": {
              "purchasePrice": {
                "type": "number",
                "example": 499,
                "description": "Price paid for the plan at time of sale. Please ensure this is the same price that was listed on the offer or this request might be rejected."
              },
              "planId": {
                "type": "string",
                "example": "10001-misc-elec-adh-replace-1y",
                "description": "The plan id being purchased. This is provided in the sdk as well as being visible per product once the product has been approved as warrantable."
              }
            }
          },
          "status": {
            "readOnly": true,
            "description": "The current status of the contract. When requesting a refund, this will have a different value.",
            "enum": [
              "live",
              "refund_requested",
              "refund_accepted",
              "refund_paid",
              "refund_denied",
              "expired"
            ]
          }
        }
      },
      "OfferPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a warranty Plan",
            "example": "AmazingAppliancePlan"
          },
          "price": {
            "type": "number",
            "example": 199,
            "description": "The offer price, in base units"
          },
          "contract": {
            "type": "object",
            "description": "Additional information about this extended warranty contract",
            "properties": {
              "coverage_starts": {
                "type": "string",
                "example": "immediate",
                "description": "Describes when the contract term begins, relative to the manufacturer’s warranty length.  For example, “immediate” means coverage starts immediately on the purchase date, and “after” means coverage starts after the manufacturer’s warranty has expired"
              },
              "coverage_includes": {
                "type": "string",
                "example": "adh",
                "description": "Possible values include “base”, which means the extended warranty is a base plan covering mechanical and electrical failures through normal use, or “adh”, which means the plan includes coverage for accidental damage (i.e. “Accidental Damage in Handling”)"
              },
              "service_type": {
                "type": "string",
                "example": "replace",
                "description": "This is the claims resolution service the plan includes.  Responses include “replacement” (the damaged item is replaced by a new or refurbished equivalent), “repair_depot” (the customer mails the damaged item to a repair facility), or “repair_onsite” (a repair technician goes out to the customer’s home to repair the item)"
              },
              "replacement_type": {
                "type": "string",
                "example": "new",
                "description": "Indicates whether the damaged item will be replaced by a “new” or “refurbished” item"
              },
              "deductible": {
                "type": "number",
                "example": 0,
                "description": "The amount of the deductible charged to the customer during a claim, if there is one.  For most Extend protection plans, there is no deductible"
              },
              "term_length": {
                "type": "number",
                "example": 36,
                "description": "The length of the extended warranty coverage, in months"
              }
            }
          },
          "url": {
            "type": "string",
            "description": "A link to the extended warranty plan terms and information.  Any offer display must include a “Learn More” or “See Plan Details” call-to-action that enables the customer to see exactly what the warranty plan covers"
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a warranty Plan",
            "example": "AmazingAppliancePlan"
          },
          "details": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "An amazing Appliance Plan",
                "description": "The name of the warranty plan. Use this in the product title for the warranty plan SKU(s) in your store"
              },
              "imageUrl": {
                "type": "string",
                "format": "uri",
                "example": "",
                "description": "The imageUrl for the warranty plan. Use this as the product image for the warranty plan SKU(s) in your store"
              },
              "termLength": {
                "type": "number",
                "example": 36,
                "description": "The length of the extended warranty coverage, in months"
              }
            }
          },
          "prices": {
            "type": "object",
            "description": "A table that helps define the set of possible price points at which a warranty plan can be sold",
            "properties": {
              "min": {
                "type": "integer",
                "format": "int64",
                "description": "The minimum price allowed for the warranty plan offered, in the base unit (i.e. cents) with no currency code",
                "example": 99
              },
              "max": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum price for the warranty plan offered, in the base unit (i.e. cents) with no currency code",
                "example": 1099
              },
              "points": {
                "type": "array",
                "description": "A list of all possible rounded price points at which the warranty plan could be offered. If your system does not allow dynamic pricing on the product page and in the cart, then create a seperate warranty plan SKU for each price point",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "example": [
                  99,
                  399,
                  799,
                  1099
                ]
              }
            }
          }
        }
      },
      "PlansList": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            }
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferPlan"
            }
          }
        }
      }
    }
  }
}
